import java.util.Scanner;
import java.util.*;

// Q.1) Remove all the occurrences of 'a' frm string s = "abcax".
public class BasicRecursion3 {
//    static String removeAllOccurrence(String s,int idx) {
//        if (idx == s.length())
//            return "";
//        String smallString = removeAllOccurrence(s,idx + 1);
//        char currentChar = s.charAt(idx);
//        if (currentChar != 'a')
//            return currentChar + smallString;
//        else return smallString;
//    }
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter the string : ");
//        String s = sc.nextLine();
//        System.out.println(removeAllOccurrence(s,0));
//    }
}
// alternate method
//class removeAllOccurrenceAlternate {
//    static String removeOccurrenceAlternate(String s) {
//        if (s.length() == 0)
//            return "";
//        String smallAns = removeOccurrenceAlternate(s.substring(1));
//        char currentChar = s.charAt(0);
//        if (currentChar != 'a')
//            return currentChar + smallAns;
//        else return smallAns;
//    }
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter the string : ");
//        String s = sc.nextLine();
//        System.out.println(removeOccurrenceAlternate(s));
//    }
//}

// Q.2) Write a program to print reverse of a string using recursion
//class Reverse {
//    static String reverseString(String s,int idx) {
//        if (idx == s.length())
//            return "";
//        String SmallAns = reverseString(s,idx + 1);
//        return SmallAns + s.charAt(idx);
//    }
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter the string : ");
//        String s = sc.nextLine();
//        System.out.println(reverseString(s,0));
//    }
//}

// Q.3) Write a program to check given string is palindrome or not.
//class palindromeCheck {
//    static String reverseString(String s,int idx) {
//        if (idx == s.length())
//            return "";
//        String SmallAns = reverseString(s,idx + 1);
//        return SmallAns + s.charAt(idx);
//    }
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter the string : ");
//        String s = sc.nextLine();
//        String reverse = reverseString(s,0);
//        if (s.equals(reverse))
//            System.out.println(s +" is Palindrome");
//        else System.out.println(s +" is not Palindrome");
//    }
//}
// alternate method
//class palindromeCheck {
//    static boolean isPalindrome(String s, int l, int r) {
//        if (l >= r)
//            return true;
//        return (s.charAt(l) == s.charAt(r) && isPalindrome(s, l + 1, r - 1));
//    }
//
//    public static void main(String[] args) {
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter the string : ");
//        String s = sc.nextLine();
//        int n = s.length();
//        if (isPalindrome(s, 0, n - 1))
//            System.out.println(s + " is Palindrome");
//        else System.out.println(s + " is not Palindrome");
//    }
//}

// Q.4) Given a string, write a method to return all its subsequences in an arraylist. A string is a subsequence of a given string that is generated by deleting some character of a given string without changing its order
// Input : abc
// Output : a b c ab ac bc abc.
//class returnSSQ {
//    static ArrayList<String> getSSQ(String s) {
//        ArrayList<String> ans = new ArrayList<>();
//        if (s.length() == 0) {
//            ans.add("");
//            return ans;
//        }
//        char curr = s.charAt(0);
//        ArrayList<String> smallAns = getSSQ(s.substring(1));
//        for (String ss : smallAns) {
//            ans.add(ss);
//            ans.add(curr + ss);
//        }
//        return ans;
//    }
//    public static void main(String[] args) {
//        ArrayList<String> ans = getSSQ("abc");
//        for (String ss : ans)
//            System.out.print(ss + " ");
//
//    }
//}

// Q.5) Given a string, write a method to print all its subsequences.
//class PrintSSQ {
//    static void SSQPrint(String s,String currAns) {
//        if (s.length() == 0) {
//            System.out.print(currAns + " ");
//            return;
//        }
//        char curr = s.charAt(0);
//        String remString = s.substring(1);
//        SSQPrint(remString,currAns + curr);
//        SSQPrint(remString,currAns);
//    }
//    public static void main(String[] args) {
//        SSQPrint("abc","");
//    }
//}

// Q.6) Given an array of integers ,print sums of all subsets in it.Output sum can be printed in any order.
//Input : arr[] = {2,3}
//Output :0 2 3 5
//Input : arr[] = {2,4,5}
//Output :0 2 4 5 6 7 9 11
class SubSequenceSum {
    static void subsetSum(int [] a,int n,int idx,int sum) {
        if (idx >= n) {
            System.out.print(sum + " ");
            return;
        }
        subsetSum(a,n,idx + 1,sum + a[idx]);
        subsetSum(a,n,idx + 1,sum);
    }
    public static void main(String[] args) {
        int [] arr = {2,4,5};
        subsetSum(arr,arr.length,0,0);
    }
}
